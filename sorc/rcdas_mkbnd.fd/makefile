SHELL=/bin/sh

SRCS=   COF2GRD.f CONLEV.f EZSKCH.f IJ2LL.f PETABCS.f \
        LL2pts.f MAKBND.f QFRMTP.f WRTETA.f FLIP.f ROTLLE.f \
        WRITER.f etaPTS.f ngmPTS.f  ncpus.f

OBJS=   COF2GRD.o CONLEV.o EZSKCH.o IJ2LL.o PETABCS.o \
        LL2pts.o MAKBND.o QFRMTP.o WRTETA.o FLIP.o ROTLLE.o \
        WRITER.o etaPTS.o ngmPTS.o ncpus.o

# Tunable parameters
#
# FC		Name of the fortran compiling system to use
# LDFLAGS	Flags to the loader
# LIBS		List of libraries
# CMD		Name of the executable
#
#FC = ifort
# FC = ftn
LDFLAGS = -qopenmp

# LIBS =          -L/usr/local/lib -lessl -lmass -L/nwprod/lib -lw3_4 -lsp_4
# LIBS = -L/nwprod/lib -lw3nco_4 -lw3emc_4 -lsp_4
LIBS = ${W3NCO_LIB4} ${W3EMC_LIB4} ${SP_LIB4}

CMD =		rcdas_mkbnd

# To perform the default compilation, use the first line
# To compile with flowtracing turned on, use the second line
# To compile giving profile additonal information, use the third line
# WARNING:  SIMULTANEOUSLY PROFILING AND FLOWTRACING IS NOT RECOMMENDED 
#FFLAGS = -O  -qstrict -qrealsize=4 -qmaxmem=-1 -qsource -qxref=full -qattr -q nosave -qspillsize=548  -qinitauto=FF -qflttrap=ov:zero:inv:en -qsigtrap -g -bloadmap:lm

#FFLAGS =	 -F
#FFLAGS =	 -Wf"-ez"
FFLAGS = -O2 -convert big_endian -assume byterecl -qopenmp

# Lines from here on down should not need to be changed.  They are the
# actual rules which make uses to build a.out.
#
all:		$(CMD)

$(CMD):		$(OBJS)
	$(FC) $(LDFLAGS) -o $(@) $(OBJS) $(LIBS)


clean:
	touch junk.o junk.lst ; rm *.o *.lst

clobber:	clean
	-rm -f $(CMD) $(CMD).prof

void:	clobber
	-rm -f $(SRCS) makefile
